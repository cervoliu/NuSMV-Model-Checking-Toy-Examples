----------------------------------------------------------------------------------------
-- BUTTON Module
----------------------------------------------------------------------------------------
MODULE Button(reset)
  VAR 
    on : boolean;
  ASSIGN
    init(on) := FALSE;
	next(on) := case 
      on  & reset  : FALSE;
      !on & reset  : FALSE;
      on  & !reset : TRUE;
      !on & !reset : {FALSE, TRUE};
	esac;
----------------------------------------------------------------------------------------
-- CABIN MODULE
----------------------------------------------------------------------------------------
MODULE Cabin(move)
  VAR
    floor : 1..5;
    dir : -1..1;
    f1 : Button(resetf1);
    f2 : Button(resetf2);
    f3 : Button(resetf3);
    f4 : Button(resetf4);
    f5 : Button(resetf5);
  DEFINE
    resetf1 := f1.on & floor = 1;
    resetf2 := f2.on & floor = 2;
    resetf3 := f3.on & floor = 3;
    resetf4 := f4.on & floor = 4;
    resetf5 := f5.on & floor = 5;
    inreq_highest := case
      f5.on : 5;
      f4.on : 4;
      f3.on : 3;
      f2.on : 2;
      f1.on : 1;
      TRUE : 0;
    esac;
    inreq_lowest := case
      f1.on : 1;
      f2.on : 2;
      f3.on : 3;
      f4.on : 4;
      f5.on : 5;
      TRUE : 6;
    esac;
  ASSIGN
    init(dir) := 0;
    next(dir) := case
      move = 1 : 1;
      move = -1 : -1;
      TRUE : 0;
    esac;
    init(floor) := 1;
    next(floor) := case
      floor < 5 & move = 1 : floor + 1;
      floor > 1 & move = -1 : floor - 1;
      TRUE : floor;
    esac;
----------------------------------------------------------------------------------------
-- CONTROLLER MODULE
----------------------------------------------------------------------------------------
MODULE Controller(l1)
  VAR
    up1 : Button(reset_up1);
    up2 : Button(reset_up2);
    up3 : Button(reset_up3);
    up4 : Button(reset_up4);

    dn5 : Button(reset_dn5);
    dn4 : Button(reset_dn4);
    dn3 : Button(reset_dn3);
    dn2 : Button(reset_dn2);

  DEFINE
    reset_up1 := up1.on & l1.floor = 1 & l1_move = 1;
    reset_up2 := up2.on & l1.floor = 2 & l1_move = 1;
    reset_up3 := up3.on & l1.floor = 3 & l1_move = 1;
    reset_up4 := up4.on & l1.floor = 4 & l1_move = 1;

    reset_dn5 := dn5.on & l1.floor = 5 & l1_move = -1;
    reset_dn4 := dn4.on & l1.floor = 4 & l1_move = -1;
    reset_dn3 := dn3.on & l1.floor = 3 & l1_move = -1;
    reset_dn2 := dn2.on & l1.floor = 2 & l1_move = -1;

    outreq_highest := case
      dn5.on          : 5;
      up4.on | dn4.on : 4;
      up3.on | dn3.on : 3;
      up2.on | dn2.on : 2;
      up1.on          : 1;
      TRUE            : 0;
    esac;

    outreq_lowest := case
      up1.on          : 1;
      up2.on | dn2.on : 2;
      up3.on | dn3.on : 3;
      up4.on | dn4.on : 4;
      dn5.on          : 5;
      TRUE            : 6;
    esac;

    l1_req_highest := l1.inreq_highest > outreq_highest ? l1.inreq_highest : outreq_highest;
    l1_req_lowest := l1.inreq_lowest < outreq_lowest ? l1.inreq_lowest : outreq_lowest;

    l1_move := case
      l1.dir >= 0 : l1_req_highest > l1.floor ? 1 : l1_req_lowest < l1.floor ? -1 : 0;
      l1.dir < 0  : l1_req_lowest < l1.floor ? -1 : l1_req_highest > l1.floor ? 1 : 0;
    esac;

  INVAR (up1.on & l1.floor = 1) -> (l1.inreq_highest > 1);
  INVAR (up2.on & l1.floor = 2 & (l1.dir >= 0 | l1_req_lowest = 2)) -> (l1.inreq_highest > 2);
  INVAR (up3.on & l1.floor = 3 & (l1.dir >= 0 | l1_req_lowest = 3)) -> (l1.inreq_highest > 3);
  INVAR (up4.on & l1.floor = 4 & (l1.dir >= 0 | l1_req_lowest = 4)) -> (l1.inreq_highest > 4);

  INVAR (dn5.on & l1.floor = 5) -> (l1.inreq_lowest < 5);
  INVAR (dn4.on & l1.floor = 4 & (l1.dir <= 0 | l1_req_highest = 4)) -> (l1.inreq_lowest < 4);
  INVAR (dn3.on & l1.floor = 3 & (l1.dir <= 0 | l1_req_highest = 3)) -> (l1.inreq_lowest < 3);
  INVAR (dn2.on & l1.floor = 2 & (l1.dir <= 0 | l1_req_highest = 2)) -> (l1.inreq_lowest < 2);

----------------------------------------------------------------------------------------
-- MAIN MODULE
----------------------------------------------------------------------------------------
MODULE main
  VAR
    c : Controller(lift1);
    lift1 : Cabin(c.l1_move);
----------------------------------------------------------------------------------------
-- SPEC
----------------------------------------------------------------------------------------

-- Liveness
LTLSPEC G (c.l1_move = 1 -> F c.l1_move != 1);
LTLSPEC G (c.l1_move = -1 -> F c.l1_move != -1);

-- inner requests are always serviced
LTLSPEC G (lift1.f1.on -> F lift1.resetf1);
LTLSPEC G (lift1.f2.on -> F lift1.resetf2);
LTLSPEC G (lift1.f3.on -> F lift1.resetf3);
LTLSPEC G (lift1.f4.on -> F lift1.resetf4);
LTLSPEC G (lift1.f5.on -> F lift1.resetf5);

-- outer requests are always serviced
LTLSPEC G (c.up1.on -> F c.reset_up1);
LTLSPEC G (c.up2.on -> F c.reset_up2);
LTLSPEC G (c.up3.on -> F c.reset_up3);
LTLSPEC G (c.up4.on -> F c.reset_up4);

LTLSPEC G (c.dn5.on -> F c.reset_dn5);
LTLSPEC G (c.dn4.on -> F c.reset_dn4);
LTLSPEC G (c.dn3.on -> F c.reset_dn3);
LTLSPEC G (c.dn2.on -> F c.reset_dn2);